{"version":3,"file":"static/js/484.026f8893.chunk.js","mappings":"6NAEaA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAaMC,EAAkB,WACpBD,EAAc,KAGlB,OACI,kBAAMH,SAhBe,SAACK,GACtBA,EAAEC,iBACFN,EAASE,GACTE,KAaA,WACI,kBACIG,SAZc,SAACF,GACvB,IAAQG,EAAUH,EAAEI,cAAZD,MACRL,EAAcK,IAWNE,KAAK,YACLC,UAAU,QACVC,KAAK,OACLC,YAAY,2BACZL,MAAON,KAEX,mBAAQU,KAAK,SAAb,wBC5BCE,EAAgB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAE5B,OACI,8BACEA,EAAWC,OAAS,IAClB,wBACKD,EAAWE,KAAI,SAAAC,GAAK,aACjB,yBACI,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAnB,mBACKF,EAAMG,aADX,QACoBH,EAAMI,kBAFrBJ,EAAME,Y,UCmBnC,EAtBe,WACX,OAA4BnB,EAAAA,EAAAA,UAAS,IAArC,eAAOsB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAAY,GAW3C,OALAC,EAAAA,EAAAA,YAAU,WACI,KAAVF,IACAG,EAAAA,EAAAA,IAAeH,EAAO,GAAGI,MAAK,SAAAC,GAAG,OAAIT,EAAUS,EAAIC,cACpD,CAACN,KAGA,iCACI,SAAC7B,EAAD,CAAWC,SAXG,SAACmC,GACnBR,EAAgB,CAACC,MAAOO,QAWpB,SAACrB,EAAD,CAAeC,WAAYQ,S,iOCnBvCa,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHN,EAAc,mCAAG,WAAOO,EAAaC,GAApB,uFACHH,GAAAA,CAAM,gBAAiB,CAC1CI,OAAQ,CACJC,QAASJ,EACTK,SAAU,QACVd,MAAOU,EACPC,KAAAA,KANkB,cACpBI,EADoB,yBAWnBA,EAASC,MAXU,2CAAH,wDAedC,EAAiB,mCAAG,oGACNT,GAAAA,CAAM,mBAAoB,CAC7CI,OAAQ,CACJC,QAASJ,EACTK,SAAU,WAJW,cACvBC,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,qDAUjBE,EAAe,mCAAG,WAAO1B,GAAP,uFACJgB,GAAAA,CAAM,SAAD,OAAUhB,GAAM,CACxCoB,OAAQ,CACJC,QAASJ,EACTK,SAAU,WAJS,cACrBC,EADqB,yBAOpBA,EAASC,MAPW,2CAAH,sDAUfG,EAAe,mCAAG,WAAO3B,GAAP,uFACJgB,GAAAA,CAAM,SAAD,OAAUhB,EAAV,YAAwB,CAChDoB,OAAQ,CACJC,QAASJ,EACTK,SAAU,WAJS,cACrBC,EADqB,yBAOpBA,EAASC,KAAKI,MAPM,2CAAH,sDAUfC,EAAc,mCAAG,WAAO7B,GAAP,uFACHgB,GAAAA,CAAM,UAAD,OAAWhB,EAAX,WAAwB,CAChDoB,OAAQ,CACJC,QAASJ,KAHS,cACpBM,EADoB,yBAOnBA,EAASC,KAAKM,SAAS,IAPJ,2CAAH,sDAUdC,EAAiB,mCAAG,WAAO/B,GAAP,uFACNgB,GAAAA,CAAM,SAAD,OAAUhB,EAAV,YAAwB,CAChDoB,OAAQ,CACJC,QAASJ,EACTK,SAAU,WAJW,cACvBC,EADuB,yBAOtBA,EAASC,KAAKV,SAPQ,2CAAH","sources":["components/SearchBar/SearchBar.jsx","components/SearchedMovies/SearchedMovies.jsx","pages/Movies/Movies.jsx","services/apiGetMovies/apiGetMovies.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nexport const Searchbar = ({ onSubmit }) => {    \n    const [inputValue, setInputValue] = useState('');\n    \n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(inputValue);\n        handleFormReset();\n    }\n    \n    const handleInputChange = (e) => {\n        const { value } = e.currentTarget;\n        setInputValue(value);\n    }\n\n    const handleFormReset = () => {\n        setInputValue('');\n    }\n  \n    return (\n        <form onSubmit={handleFormSubmit}>  \n            <input\n                onChange={handleInputChange}\n                name=\"inputText\"\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Search images and photos\"\n                value={inputValue}\n            />\n            <button type=\"submit\">Search\n                {/* <Icon/> */}\n            </button>\n        </form>\n    )\n    \n}","import { Link } from \"react-router-dom\";\n\nexport const SeachedMovies = ({ moviesList }) => {\n\n    return (\n        <>\n        { moviesList.length > 0 && (\n            <ul>   \n                {moviesList.map(movie => (\n                    <li key={movie.id}>\n                        <Link to={`${movie.id}`}>\n                            {movie.title ?? movie.original_title}\n                        </Link>\n                    </li>\n                ))}\n            </ul>       \n        )}\n        </>\n\n    )\n    \n}\n\n\n","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Searchbar } from \"components/SearchBar/SearchBar\";\nimport { SeachedMovies } from \"components/SearchedMovies/SearchedMovies\";\nimport { apiMovieSearch } from \"services/apiGetMovies/apiGetMovies\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\") || '';    \n\n    const handleGetData = (searchValue) => {\n        setSearchParams({query: searchValue})\n    }\n\n    useEffect(() => {\n        query !== \"\" &&\n        apiMovieSearch(query, 1).then(res => setMovies(res.results));\n    }, [query]);\n\n    return (\n        <>\n            <Searchbar onSubmit={handleGetData} />\n            <SeachedMovies moviesList={movies} />\n        </>\n    );\n};\n\nexport default Movies;","import axios from \"axios\";\n\n// import useState from './re'\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '1691901ed2ae3d246dfa1eabb74d344d';\n\nexport const apiMovieSearch = async (searchQuery, page) => {\n    const response = await axios(`search/movie/`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            query: searchQuery,\n            page, \n\n        }\n    });\n    // console.log(response.data);\n    return response.data;\n}\n\n\nexport const apiTrandingMovies = async () => {\n    const response = await axios(`trending/all/day`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    });\n    return response.data;\n}\n\nexport const apiGetMovieById = async (id) => {\n    const response = await axios(`movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    });\n    return response.data;\n}\n\nexport const apiGetMovieCast = async (id) => {\n    const response = await axios(`movie/${id}/credits`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    });\n    return response.data.cast;\n}\n\nexport const apiGetActorPic = async (id) => {\n    const response = await axios(`person/${id}/images`, {\n        params: {\n            api_key: API_KEY,\n        }\n    });\n    // console.log(response.data.profiles)\n    return response.data.profiles[0];\n}\n\nexport const apiGetReviewsById = async (id) => {\n    const response = await axios(`movie/${id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    });\n    return response.data.results;\n}"],"names":["Searchbar","onSubmit","useState","inputValue","setInputValue","handleFormReset","e","preventDefault","onChange","value","currentTarget","name","className","type","placeholder","SeachedMovies","moviesList","length","map","movie","to","id","title","original_title","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","apiMovieSearch","then","res","results","searchValue","axios","API_KEY","searchQuery","page","params","api_key","language","response","data","apiTrandingMovies","apiGetMovieById","apiGetMovieCast","cast","apiGetActorPic","profiles","apiGetReviewsById"],"sourceRoot":""}