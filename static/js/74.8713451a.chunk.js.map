{"version":3,"file":"static/js/74.8713451a.chunk.js","mappings":"2OAEaA,EAAaC,EAAAA,EAAAA,GAAH,oGCAVC,EAAaD,EAAAA,EAAAA,GAAH,yP,SCAVE,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrB,OACI,UAACF,EAAD,YACI,wBAAKE,EAAOC,UACZ,uBAAID,EAAOE,c,UCqBvB,EApBgB,WACZ,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,SAAAJ,GAAO,OAAIC,EAAWD,QACvD,CAACH,IAGAG,EAAQK,OAAS,GACb,SAACf,EAAD,UACKU,EAAQM,KAAI,SAAAZ,GAAM,OACf,SAACD,EAAD,CAAwBC,OAAQA,GAAnBA,EAAOa,UAG1B,gD,iOClBdC,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAc,mCAAG,WAAOC,EAAaC,GAApB,uFACHJ,GAAAA,CAAM,gBAAiB,CAC1CK,OAAQ,CACJC,QAASL,EACTM,SAAU,QACVC,MAAOL,EACPC,KAAAA,KANkB,cACpBK,EADoB,yBAWnBA,EAASC,MAXU,2CAAH,wDAedC,EAAiB,mCAAG,oGACNX,GAAAA,CAAM,mBAAoB,CAC7CK,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJW,cACvBE,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,qDAUjBE,EAAe,mCAAG,WAAOb,GAAP,uFACJC,GAAAA,CAAM,SAAD,OAAUD,GAAM,CACxCM,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJS,cACrBE,EADqB,yBAOpBA,EAASC,MAPW,2CAAH,sDAUfG,EAAe,mCAAG,WAAOd,GAAP,uFACJC,GAAAA,CAAM,SAAD,OAAUD,EAAV,YAAwB,CAChDM,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJS,cACrBE,EADqB,yBAOpBA,EAASC,KAAKI,MAPM,2CAAH,sDAUfC,EAAc,mCAAG,WAAOhB,GAAP,uFACHC,GAAAA,CAAM,UAAD,OAAWD,EAAX,WAAwB,CAChDM,OAAQ,CACJC,QAASL,KAHS,cACpBQ,EADoB,yBAOnBA,EAASC,KAAKM,SAAS,IAPJ,2CAAH,sDAUdrB,EAAiB,mCAAG,WAAOI,GAAP,uFACNC,GAAAA,CAAM,SAAD,OAAUD,EAAV,YAAwB,CAChDM,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJW,cACvBE,EADuB,yBAOtBA,EAASC,KAAKO,SAPQ,2CAAH","sources":["components/Reviews/Reviews.styled.jsx","components/Review/Review.styled.jsx","components/Review/Review.jsx","components/Reviews/Reviews.jsx","services/apiGetMovies/apiGetMovies.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ReviewList = styled.ul`\n    displey: flex;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n`","import styled from \"@emotion/styled\";\n\nexport const ReviewItem = styled.li`\n    display: block;\n    font-size: 15px;\n    width: 99%;\n    padding: 5px;\n    border: 1px solid black;\n    border-radius: 5px;\n\n    :not(:last-child) {\n        margin-bottom: 5px;\n        margin-right: 5px;\n    }\n`","import { ReviewItem } from \"./Review.styled\"\n\nexport const Review = ({ review }) => {\n    return (\n        <ReviewItem>\n            <h5>{review.author}</h5>\n            <p>{review.content}</p>\n        </ReviewItem>\n    )\n}","import { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport { ReviewList } from \"./Reviews.styled\";\nimport { Review } from \"components/Review/Review\";\n\nimport { apiGetReviewsById } from \"services/apiGetMovies/apiGetMovies\"\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        apiGetReviewsById(movieId).then(reviews => setReviews(reviews))\n    }, [movieId])\n\n    return (\n        reviews.length > 0 ?\n            <ReviewList>\n                {reviews.map(review => \n                    <Review key={review.id} review={review} />\n                )}\n            </ReviewList>\n            : <h3>Reviews not found</h3>\n        \n    )\n}\n\nexport default Reviews;","import axios from \"axios\";\n\n// import useState from './re'\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '1691901ed2ae3d246dfa1eabb74d344d';\n\nexport const apiMovieSearch = async (searchQuery, page) => {\n    const response = await axios(`search/movie/`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            query: searchQuery,\n            page, \n\n        }\n    });\n    // console.log(response.data);\n    return response.data;\n}\n\n\nexport const apiTrandingMovies = async () => {\n    const response = await axios(`trending/all/day`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    });\n    return response.data;\n}\n\nexport const apiGetMovieById = async (id) => {\n    const response = await axios(`movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    });\n    return response.data;\n}\n\nexport const apiGetMovieCast = async (id) => {\n    const response = await axios(`movie/${id}/credits`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    });\n    return response.data.cast;\n}\n\nexport const apiGetActorPic = async (id) => {\n    const response = await axios(`person/${id}/images`, {\n        params: {\n            api_key: API_KEY,\n        }\n    });\n    // console.log(response.data.profiles)\n    return response.data.profiles[0];\n}\n\nexport const apiGetReviewsById = async (id) => {\n    const response = await axios(`movie/${id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    });\n    return response.data.results;\n}"],"names":["ReviewList","styled","ReviewItem","Review","review","author","content","movieId","useParams","useState","reviews","setReviews","useEffect","apiGetReviewsById","then","length","map","id","axios","API_KEY","apiMovieSearch","searchQuery","page","params","api_key","language","query","response","data","apiTrandingMovies","apiGetMovieById","apiGetMovieCast","cast","apiGetActorPic","profiles","results"],"sourceRoot":""}